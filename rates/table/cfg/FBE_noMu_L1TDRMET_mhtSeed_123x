#format is like this:
#typeOfParameter :: parameterOrObjectName :: option1=value2; option2=(this,is,a,list)


## general options
## -----------------------------------------------------------
variable :: bundledate       :: 2022-Apr20-v5-baseline-noMu
variable :: nBunches         :: 2760
variable :: revFreq          :: 11246

#variable :: tiers            :: (variations)
variable :: tiers            :: (thresholds)

variable :: varBins          :: (30,50)
#variable :: varBins          :: (10,20,30,40,50,60,70,80,90,100)
##variable :: varBins          :: (100,140,275,425,575,700,850,1000)
variable :: varError         :: 0.2
variable :: varInterpol      :: linear
variable :: varLeg           :: 1
variable :: varCut           :: 1
variable :: varPrecision     :: 2
variable :: varIterations    :: 5
variable :: useNominalBwF    :: False



## samples (always all samples are used!)
## -----------------------------------------------------------

sample   :: neutrinos        :: path:=/eos/cms/store/cmst3/group/l1tr/phase2Menu/EmuDev/minbias_merged_nTuplesEmu_v22_2.root; tree:=l1PhaseIITree/L1PhaseIITree



## physics objects at trigger level
## -----------------------------------------------------------

## Electrons and Photons
object :: EG           :: basebranch:=EG        ; variables:=(Et,Eta,Phi,Iso,zVtx,PassesLooseTrackID,PassesPhotonID,HwQual); \
                          leading:=Et; lengthbranch:=nEG; onToOff:=0

object :: tkElectron   :: basebranch:=tkElectron      ; variables:=(Et,Eta,Phi,TrkIso,zVtx,PassesLooseTrackID,PassesPhotonID,HwQual); \
                          leading:=Et; lengthbranch:=nTkElectrons; onToOff:=0

object :: tkPhoton     :: basebranch:=tkPhoton      ; variables:=(Et,Eta,Phi,TrkIso,TrkIsoPV,zVtx,PassesLooseTrackID,passesPhotonID,HwQual); \
                          leading:=Et; lengthbranch:=nTkPhotons; onToOff:=0

## Muons
#object :: tkMu          :: basebranch:=tkMuon    ; variables:=(Pt,Eta,Phi,Chg,Iso,TrkIso,Qual,zVtx,MuRefPt,MuRefEta,MuRefPhi,Region,Qual); \
#                           leading:=Pt; lengthbranch:=nTkMuons; onToOff:=0

object :: tkGmtMu          :: basebranch:=gmtTkMuon    ; variables:=(Pt,Eta,Phi,Chg,Iso,Qual,Z0); \
                           leading:=Pt; lengthbranch:=nGmtTkMuons; onToOff:=0

## Taus
object :: puppiTau     :: basebranch:=nnTau     ; variables:=(Et,Eta,Phi,PassLooseNN,PassTightNN); \
                          leading:=Et; lengthbranch:=nNNTaus; onToOff:=0

object :: caloTau      :: basebranch:=caloTau     ; variables:=(Et,Eta,Phi); \
                          leading:=Et; lengthbranch:=nCaloTaus; onToOff:=0

## Jets
object :: puppiJet     :: basebranch:=phase1PuppiJet  ; variables:=(Et,Eta,Phi); \
                          leading:=Et; lengthbranch:=nPhase1PuppiJets; onToOff:=0

## HT
object :: puppiHt      :: basebranch:=phase1PuppiHT   ; variables:=(Et=); \
                          leading:=Et; isFlat:=True; fixedIndex:=0; onToOff:=0 

object :: puppiMHt      :: basebranch:=phase1PuppiMHT   ; variables:=(Et,Phi); \
                          leading:=Et; isFlat:=True; onToOff:=0

## MET
object :: puppiMet     :: basebranch:=puppiMET    ; variables:=(Et,Phi); \
                          leading:=Et; isFlat:=True; onToOff:=0

## zVtx
object :: puppiVtx     :: basebranch:=z0L1TkPV  ; variables:=(Et=); \
                          leading:=Et; isFlat:=True; onToOff:=0




## function aliases
## -----------------------------------------------------------
function :: notMatched       :: args:=(eta1,eta2,phi1,phi2); lambda:= math.sqrt(math.pow(abs(abs(eta1)-abs(eta2)),2) + math.pow(abs(phi1-phi2) if abs(phi1-phi2)<=math.pi else 2*math.pi-abs(phi1-phi2),2))>0.1
function :: deltaR           :: args:=(eta1,eta2,phi1,phi2); lambda:= math.sqrt(math.pow(abs(eta1-eta2),2) + math.pow(abs(phi1-phi2) if abs(phi1-phi2)<=math.pi else 2*math.pi-abs(phi1-phi2),2))
function :: deltaEta           :: args:=(eta1,eta2); lambda:= abs(eta1-eta2)
function :: etaRangeCutLess      :: args:=(x,eta,etaRange,cutInRange,cutOutRange); lambda:= x<cutInRange if abs(eta)<etaRange else x<cutOutRange
function :: etaRangeCutGreater   :: args:=(x,eta,etaRange,cutInRange,cutOutRange); lambda:= x>cutInRange if abs(eta)<etaRange else x>cutOutRange
function :: pairInvMass          :: args:=(pt1,pt2,eta1,eta2,phi1,phi2); lambda:= math.sqrt(2.0*pt1*pt2*(math.cosh(eta1-eta2)-math.cos(phi1-phi2)))
function :: pfJetEtaVeto         :: args:=(Eta); lambda:= abs(Eta)<2.5 or abs(Eta)>3.0

function :: muonQual         :: args:=(Region,Qual); lambda:= 1 if (Region==3 and (Qual == 11 or Qual == 13 or Qual == 14 or Qual == 15)) else (1 if Region<3 else 0)

function :: cleanMuons :: args:=(Region,Eta); lambda:= Region==1 if abs(Eta)<0.9 else (Region==2 if abs(Eta)<1.2 else Region==3)


# Quality requirements for muons and tkelectrons
function :: MuonStaQualCut :: args:=(Qual,Eta); lambda:=Qual>=0 if abs(Eta)<0.9 else (Qual>=12 if abs(Eta)<1.2 else Qual>=0)
function :: TkElectronIsoQualCut :: args:=(HwQual,Eta); lambda:=HwQual==3 if abs(Eta)>1.479 else HwQual>=0

#Scalings

#HT
function :: Phase1PuppiHT090OfflineEtCut :: args:=(offline); lambda:=(offline-46.674588)/1.113875

#MHT
function :: Phase1PuppiMHTOfflineEtCut :: args:=(offline); lambda:=(offline+9.724987)/1.037459

#puppimet
function :: PuppiMET090OfflineEtCut :: args:=(offline); lambda:=(offline-62.120627)/1.382451

#EG
function :: EGElectronOfflineEtCut :: args:=(offline,Et,Eta); lambda:=Et>(offline-2.870789)/1.165597 if abs(Eta)<1.5 else (Et>(offline-2.720773)/1.228424)
function :: TkElectronOfflineEtCut :: args:=(offline,Et,Eta); lambda:=Et>(offline-0.617835)/1.182946 if abs(Eta)<1.5 else (Et>(offline-0.336402)/1.275834)
function :: TkIsoElectronOfflineEtCut :: args:=(offline,Et,Eta); lambda:=Et>(offline-0.189054)/1.211045 if abs(Eta)<1.5 else (Et>(offline-0.822056)/1.239274)
function :: TkIsoPhotonOfflineEtCut :: args:=(offline,Et,Eta); lambda:=Et>(offline-2.330926)/1.093568 if abs(Eta)<1.5 else (Et>(offline-4.565565)/1.077261)

#taus
function :: CaloTau090OfflineEtCut :: args:=(offline,Et,Eta); lambda:=Et>(offline+6.720396)/1.510317 if abs(Eta)<1.5 else (Et>(offline+5.499322)/1.898208)
function :: NNTauLoose090OfflineEtCut :: args:=(offline,Et,Eta); lambda:=Et>(offline-3.778738)/1.642246 if abs(Eta)<1.5 else (Et>(offline-14.808886)/1.716542)

#puppijet
function :: Phase1PuppiJetOfflineEtCut :: args:=(offline,Et,Eta); lambda:=Et>(offline-12.381481)/1.331251 if abs(Eta)<1.5 else (Et>(offline-21.649515)/1.372602 if abs(Eta)<2.4 else (Et>(offline-35.609357)/1.493540))

#tkmuons
function :: GMTTkMuonOfflineEtCut :: args:=(offline,Et,Eta); lambda:=Et>(offline-0.903751)/1.039495 if abs(Eta)<0.83 else (Et>(offline-0.894300)/1.044889 if abs(Eta)<1.24 else (Et>(offline-0.796396)/1.040808))


## trigger paths
## -----------------------------------------------------------

## muon

trigger  :: L1_SingleTkMu     :: leg1:=(tkGmtMu  , GMTTkMuonOfflineEtCut(22.0,Pt,Eta), abs(Eta)<2.4 ); \

trigger  :: L1_DoubleTkMu     :: leg1:=(tkGmtMu   , GMTTkMuonOfflineEtCut(15.0,Pt,Eta), abs(Eta)<2.4 ); \
                                 leg2:=(tkGmtMu   , GMTTkMuonOfflineEtCut(7.0,Pt,Eta), abs(Eta)<2.4, abs(leg1.Z0-Z0)<1 ); \

#trigger  :: L1_TripleTkMu    :: leg1:=(tkGmtMu, GMTTkMuonOfflineEtCut(5.0,Pt,Eta), abs(Eta)<2.4 ); \
#                                leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(3.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Z0)<1 ); \
#                                leg3:=(tkGmtMu, GMTTkMuonOfflineEtCut(3.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Z0)<1 ); \

# e/gamma

trigger  :: L1_SingleTkEle    :: leg1:=(tkElectron , TkElectronOfflineEtCut(36.0,Et,Eta), abs(Eta)<2.4, PassesLooseTrackID); \

trigger  :: L1_SingleTkEleIso :: leg1:=(tkElectron , TkIsoElectronOfflineEtCut(28.0,Et,Eta), TkElectronIsoQualCut(HwQual,Eta), etaRangeCutLess(TrkIso,Eta,1.479,0.13,0.28)); \

trigger  :: L1_SingleTkPhoIso :: leg1:=(tkPhoton   , TkIsoPhotonOfflineEtCut(36.0,Et,Eta), abs(Eta)<2.4,  PassesLooseTrackID, etaRangeCutLess(TrkIso,Eta,1.479,0.25,0.205)); \

trigger  :: L1_TkEleIso_EG    :: leg1:=(tkElectron , TkIsoElectronOfflineEtCut(22.0,Et,Eta), abs(Eta)<2.4,  TkElectronIsoQualCut(HwQual,Eta), etaRangeCutLess(TrkIso,Eta,1.479,0.13,0.28)); \
                                 leg2:=(EG         , EGElectronOfflineEtCut(12.0,Et,Eta), abs(Eta)<2.4,  PassesLooseTrackID, notMatched(Eta, leg1.Eta, Phi, leg1.Phi)); \

trigger  :: L1_DoubleTkEle    :: leg1:=(tkElectron   , TkElectronOfflineEtCut(25.0,Et,Eta), abs(Eta)<2.4,  PassesLooseTrackID); \
                                 leg2:=(tkElectron   , TkElectronOfflineEtCut(12.0,Et,Eta), abs(Eta)<2.4,  PassesLooseTrackID, abs(zVtx-leg1.zVtx)<1); \

trigger  :: L1_DoubleTkPhoIso  :: leg1:=(tkPhoton   , TkIsoPhotonOfflineEtCut(22.0,Et,Eta), abs(Eta)<2.4,  PassesLooseTrackID, etaRangeCutLess(TrkIso,Eta,1.479,0.25,0.205)); \
                                  leg2:=(tkPhoton   , TkIsoPhotonOfflineEtCut(12.0,Et,Eta), abs(Eta)<2.4,  PassesLooseTrackID, etaRangeCutLess(TrkIso,Eta,1.479,0.25,0.205)); \



# tau stuff

trigger  :: L1_SinglePFTau    :: leg1:=(caloTau  , CaloTau090OfflineEtCut(150.0,Et,Eta), abs(Eta)<2.172); \

trigger  :: L1_PFTau_PFTau    :: leg1:=(caloTau  , CaloTau090OfflineEtCut(90.0,Et,Eta), abs(Eta)<2.172); \
                                 leg2:=(caloTau  , CaloTau090OfflineEtCut(90.0,Et,Eta), abs(Eta)<2.172, deltaR(Eta, leg1.Eta, Phi, leg1.Phi)>0.5); \



trigger  :: L1_PFIsoTau_PFIsoTau  :: leg1:=(puppiTau  , NNTauLoose090OfflineEtCut(52.0,Et,Eta), abs(Eta)<2.172, PassLooseNN>0); \
                                     leg2:=(puppiTau  , NNTauLoose090OfflineEtCut(52.0,Et,Eta), abs(Eta)<2.172, PassLooseNN>0, deltaR(Eta, leg1.Eta, Phi, leg1.Phi)>0.5); \

trigger  :: L1_PFIsoTau_TkMu  :: leg1:=(puppiVtx ,leading>-99999.0); \
	    		      	 leg2:=(tkGmtMu  , GMTTkMuonOfflineEtCut(18.0,Pt,Eta), abs(Eta)<2.1, abs(Z0-leg1.Et)<1); \
                                 leg3:=(puppiTau , NNTauLoose090OfflineEtCut(42.0,Et,Eta), abs(Eta)<2.172, PassLooseNN>0); \  

trigger  :: L1_TkEleIso_PFIsoTau :: leg1:=(puppiVtx ,leading>-99999.0); \
	    			    leg2:=(tkElectron, TkIsoElectronOfflineEtCut(22.0,Et,Eta), abs(Eta)<2.1, TkElectronIsoQualCut(HwQual,Eta), etaRangeCutLess(TrkIso,Eta,1.479,0.13,0.28), abs(zVtx-leg1.Et)<1); \
                                    leg3:=(puppiTau, NNTauLoose090OfflineEtCut(45.0,Et,Eta), abs(Eta)<2.172, PassLooseNN>0); \

trigger  :: L1_PFIsoTau_PFMet    :: leg1:=(puppiTau, NNTauLoose090OfflineEtCut(55.0,Et,Eta), abs(Eta)<2.172, PassLooseNN>0); \
                                    leg2:=(puppiMet, Et>PuppiMET090OfflineEtCut(190.0)); \


# Jets
trigger  :: L1_SinglePfJet    :: leg1:=(puppiJet, Phase1PuppiJetOfflineEtCut(230.0,Et,Eta), abs(Eta)<2.4); \

trigger  :: L1_DoublePFJet_dEtaMax :: leg1:=(puppiJet, Phase1PuppiJetOfflineEtCut(112.0,Et,Eta), abs(Eta)<2.4); \
                                      leg2:=(puppiJet, Phase1PuppiJetOfflineEtCut(112.0,Et,Eta), abs(Eta)<2.4, deltaEta(Eta,leg1.Eta)<1.6); \

# HT, MET
trigger  :: L1_PFHTT          :: leg1:=(puppiHt , leading>Phase1PuppiHT090OfflineEtCut(450.0)); \

trigger  :: L1_PFMHTT          :: leg1:=(puppiMHt , Et>Phase1PuppiMHTOfflineEtCut(135.5)); \

trigger  :: L1_PFMet          :: leg1:=(puppiMet, Et>PuppiMET090OfflineEtCut(200.0)); \

trigger  :: L1_PFHTT_QuadJet  :: leg1:=(puppiHt , leading>Phase1PuppiHT090OfflineEtCut(400.0)); \
                                 leg2:=(puppiJet, Phase1PuppiJetOfflineEtCut(70.0,Et,Eta), Et>25.0, abs(Eta)<2.4); \                             
                                 leg3:=(puppiJet, Phase1PuppiJetOfflineEtCut(55.0,Et,Eta), Et>25.0, abs(Eta)<2.4); \
                                 leg4:=(puppiJet, Phase1PuppiJetOfflineEtCut(40.0,Et,Eta), Et>25.0, abs(Eta)<2.4); \
                                 leg5:=(puppiJet, Phase1PuppiJetOfflineEtCut(40.0,Et,Eta), Et>25.0, abs(Eta)<2.4); \

# EG+Mu
trigger  :: L1_TkMu_TkEleIso :: leg1:=(tkGmtMu, GMTTkMuonOfflineEtCut(7.0,Pt,Eta), abs(Eta)<2.4 ); \
                                leg2:=(tkElectron, TkIsoElectronOfflineEtCut(20.0,Et,Eta),  abs(Eta)<2.4, TkElectronIsoQualCut(HwQual,Eta), etaRangeCutLess(TrkIso,Eta,1.479,0.13,0.28), abs(zVtx-leg1.Z0)<1); \

trigger  :: L1_TkMu_TkEle    :: leg1:=(tkGmtMu, GMTTkMuonOfflineEtCut(7.0,Pt,Eta), abs(Eta)<2.4 ); \
                                leg2:=(tkElectron, TkElectronOfflineEtCut(23.0,Et,Eta),  abs(Eta)<2.4,  PassesLooseTrackID, abs(zVtx-leg1.Z0)<1); \

trigger  :: L1_TkEle_TkMu    :: leg1:=(tkElectron , TkElectronOfflineEtCut(10.0,Et,Eta),  abs(Eta)<2.4,  PassesLooseTrackID); \
                                leg2:=(tkGmtMu , GMTTkMuonOfflineEtCut(20.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.zVtx)<1 ); \

trigger  :: L1_TkMu_DoubleTkEle :: leg1:=(tkElectron , TkElectronOfflineEtCut(17.0,Et,Eta),  abs(Eta)<2.4,  PassesLooseTrackID); \
                                   leg2:=(tkElectron , TkElectronOfflineEtCut(17.0,Et,Eta),  abs(Eta)<2.4,  PassesLooseTrackID, abs(zVtx-leg1.zVtx)<1); \
                                   leg3:=(tkGmtMu , GMTTkMuonOfflineEtCut(6.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.zVtx)<1 ); \                             

#trigger  :: L1_DoubleTkMu_TkEle :: leg1:=(tkElectron , TkElectronOfflineEtCut(9.0,Et,Eta),  abs(Eta)<2.4,  PassesLooseTrackID); \
#                                   leg2:=(tkGmtMu , GMTTkMuonOfflineEtCut(5.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.zVtx)<1 ); \                             
#                                   leg3:=(tkGmtMu , GMTTkMuonOfflineEtCut(5.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.zVtx)<1 ); \                             
                                   

# Lep+Jet/HT
trigger  :: L1_TkMu_PfHTT      :: leg1:=(puppiVtx,leading>-99999.0); \
                                  leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(6.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Et)<1 ); \
                                  leg3:=(puppiHt, leading>Phase1PuppiHT090OfflineEtCut(320.0)); \

trigger  :: L1_TkMu_PfJet_dRMax_DoubleJet_dEtaMax  :: leg1:=(puppiVtx,leading>-99999.0); \
                                   leg2:=(tkGmtMu,  GMTTkMuonOfflineEtCut(12.0,Pt,Eta), Qual>=8, abs(Eta)<2.4, abs(Z0-leg1.Et)<1 ); \
                                   leg3:=(puppiJet, Phase1PuppiJetOfflineEtCut(40.0,Et,Eta),  abs(Eta)<2.4, deltaR(Eta,leg2.Eta,Phi,leg2.Phi)<0.4); \
                                   leg4:=(puppiJet, Phase1PuppiJetOfflineEtCut(40.0,Et,Eta),  abs(Eta)<2.4); \
                                   leg5:=(puppiJet, Phase1PuppiJetOfflineEtCut(40.0,Et,Eta),  abs(Eta)<2.4, deltaEta(Eta,leg4.Eta)<1.6); \

#trigger  :: L1_TkMu_PfJet_PfMet      :: leg1:=(puppiVtx,leading>-99999.0); \
#                                        leg2:=(tkGmtMu,  GMTTkMuonOfflineEtCut(3.0,Pt,Eta), abs(Eta)<2.1, abs(Z0-leg1.Et)<1 ); \
#                                        leg3:=(puppiJet, Phase1PuppiJetOfflineEtCut(110.0,Et,Eta), abs(Eta)<2.5); \
#                                        leg4:=(puppiMet, Et>PuppiMET090OfflineEtCut(120.0)); \

#trigger  :: L1_DoubleTkMu_PfJet_PfMet   :: leg1:=(puppiVtx,leading>-99999.0); \
#                                           leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(3.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Et)<1 ); \
#                                           leg3:=(tkGmtMu, GMTTkMuonOfflineEtCut(3.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Et)<1 ); \
#                                           leg4:=(puppiJet, Phase1PuppiJetOfflineEtCut(60.0,Et,Eta), abs(Eta)<2.4); \
#                                           leg5:=(puppiMet, Et>PuppiMET090OfflineEtCut(130.0)); 

#trigger  :: L1_DoubleTkMu_PfHTT      :: leg1:=(puppiVtx,leading>-99999.0); \
#                                        leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(3.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Et)<1 ); \
#                                        leg3:=(tkGmtMu, GMTTkMuonOfflineEtCut(3.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Et)<1 ); \
#                                        leg4:=(puppiHt, leading>Phase1PuppiHT090OfflineEtCut(300.0));

trigger  :: L1_DoubleTkEle_PFHTT :: leg1:=(puppiVtx,leading>-99999.0); \
                                    leg2:=(tkElectron   , TkElectronOfflineEtCut(8.0,Et,Eta),  abs(Eta)<2.5,  PassesLooseTrackID, abs(zVtx-leg1.Et)<1); \
                                    leg3:=(tkElectron   , TkElectronOfflineEtCut(8.0,Et,Eta),  abs(Eta)<2.5,  PassesLooseTrackID, abs(zVtx-leg1.Et)<1); \
                                    leg4:=(puppiHt, leading>Phase1PuppiHT090OfflineEtCut(390.0));
                                    

trigger  :: L1_TkEleIso_PFHTT :: leg1:=(puppiVtx,leading>-99999.0); \
                                 leg2:=(tkElectron , TkIsoElectronOfflineEtCut(26.0,Et,Eta),  abs(Eta)<2.1,  TkElectronIsoQualCut(HwQual,Eta), etaRangeCutLess(TrkIso,Eta,1.479,0.13,0.28), abs(zVtx-leg1.Et)<1); \
                                 leg3:=(puppiHt , leading>Phase1PuppiHT090OfflineEtCut(190.0));

trigger  :: L1_TkEle_PFJet_dRMin :: leg1:=(puppiVtx,leading>-99999.0); \
                                    leg2:=(tkElectron , TkElectronOfflineEtCut(28.0,Et,Eta), abs(Eta)<2.1,  PassesLooseTrackID,  abs(zVtx-leg1.Et)<1); \
                                    leg3:=(puppiJet, Phase1PuppiJetOfflineEtCut(40.0,Et,Eta), abs(Eta)<2.4, deltaR(Eta, leg2.Eta, Phi, leg2.Phi)>0.3); \




# VBF
trigger  :: L1_DoublePFJet_MassMin :: leg1:=(puppiJet, Phase1PuppiJetOfflineEtCut(160.0,Et,Eta)); \
                                      leg2:=(puppiJet, Phase1PuppiJetOfflineEtCut(35.0,Et,Eta), pairInvMass(Et,leg1.Et,Eta,leg1.Eta,Phi,leg1.Phi)>620.0); \



# BPH
#trigger  :: L1_DoubleTkMu0er1p5_SQ_OS_dR_Max1p4 :: leg1:=(tkGmtMu, abs(Eta)<1.5 ); \
#                                                   leg2:=(tkGmtMu, abs(Eta)<1.5, deltaR(Eta, leg1.Eta, Phi, leg1.Phi)<1.4, pow(-1,leg1.Chg)*pow(-1,Chg)<0.0, abs(Z0-leg1.Z0)<1 ); \

#trigger  :: L1_DoubleTkMu4_SQ_OS_dR_Max1p2 :: leg1:=(tkGmtMu, GMTTkMuonOfflineEtCut(4.0,Pt,Eta), abs(Eta)<2.4 ); \
#                                              leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(4.0,Pt,Eta), abs(Eta)<2.4, deltaR(Eta, leg1.Eta, Phi, leg1.Phi)<1.2, pow(-1,leg1.Chg)*pow(-1,Chg)<0.0, abs(Z0-leg1.Z0)<1 ); \


#trigger  :: L1_DoubleTkMu4p5er2p0_SQ_OS_Mass7to18 :: leg1:=(tkGmtMu, GMTTkMuonOfflineEtCut(4.5,Pt,Eta), abs(Eta)<2.0 ); \
#                                                     leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(4.5,Pt,Eta), abs(Eta)<2.0, pairInvMass(Pt,leg1.Pt,Eta,leg1.Eta,Phi,leg1.Phi)>7.0, pairInvMass(Pt,leg1.Pt,Eta,leg1.Eta,Phi,leg1.Phi)<18.0, pow(-1,leg1.Chg)*pow(-1,Chg)<0.0, abs(Z0-leg1.Z0)<1 ); \


#trigger  :: L1_DoubleTkMu9_SQ :: leg1:=(tkGmtMu, GMTTkMuonOfflineEtCut(9.0,Pt,Eta), abs(Eta)<2.4); \
#                                 leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(9.0,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Z0)<1); \

#trigger  :: L1_TripleTkMu_5SQ_3SQ_0OQ_DoubleMu_5_3_SQ_OS_Mass_Max9 :: leg1:=(tkGmtMu, GMTTkMuonOfflineEtCut(5.0,Pt,Eta), abs(Eta)<2.4 ); \
#                                                                      leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(3.0,Pt,Eta), abs(Eta)<2.4, pairInvMass(Pt,leg1.Pt,Eta,leg1.Eta,Phi,leg1.Phi)<9.0, pow(-1,leg1.Chg)*pow(-1,Chg)<0.0, abs(Z0-leg1.Z0)<1 ); \
#                                                                      leg3:=(tkGmtMu, Pt>0.0, abs(Eta)<2.4, abs(Z0-leg1.Z0)<1 ); \

#trigger  :: L1_TripleTkMu_5_3p5_2p5_OS_Mass_5to17  :: leg1:=(tkGmtMu, GMTTkMuonOfflineEtCut(5.0,Pt,Eta), abs(Eta)<2.4 ); \
#                                                      leg2:=(tkGmtMu, GMTTkMuonOfflineEtCut(3.5,Pt,Eta), abs(Eta)<2.4, abs(Z0-leg1.Z0)<1 ); \
#                                                      leg3:=(tkGmtMu, GMTTkMuonOfflineEtCut(2.5,Pt,Eta), abs(Eta)<2.4, pow(-1,leg1.Chg)*pow(-1,Chg)<0.0, pairInvMass(Pt,leg1.Pt,Eta,leg1.Eta,Phi,leg1.Phi)>5.0, pairInvMass(Pt,leg1.Pt,Eta,leg1.Eta,Phi,leg1.Phi)<17.0, abs(Z0-leg1.Z0)<1 ); \




# Standalone path: recover efficiency and robustness

trigger  :: L1_SingleEGEle    :: leg1:=(EG , EGElectronOfflineEtCut(51.0,Et,Eta),  abs(Eta)<2.4, PassesLooseTrackID); \

trigger  :: L1_DoubleEGEle    :: leg1:=(EG , EGElectronOfflineEtCut(37.0,Et,Eta),  abs(Eta)<2.4,  PassesLooseTrackID ); \
                                 leg2:=(EG , EGElectronOfflineEtCut(24.0,Et,Eta),  abs(Eta)<2.4,  PassesLooseTrackID, notMatched(Eta, leg1.Eta, Phi, leg1.Phi)); \


